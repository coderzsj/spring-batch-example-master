<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.xuxueli</groupId>
		<artifactId>xxl-job</artifactId>
		<version>2.0.2</version>
	</parent>
	<artifactId>xxl-job-admin</artifactId>
	<packaging>jar</packaging>

	<properties>
		<!--jsw daemon -->
		<daemon-name>${project.name}</daemon-name>
		<daemon-mainClass>com.xxl.job.admin.XxlJobAdminApplication</daemon-mainClass>
		<daemon-JAVA_Xms>512M</daemon-JAVA_Xms>
		<daemon-JAVA_Xmx>512M</daemon-JAVA_Xmx>
		<daemon-JAVA_OPS></daemon-JAVA_OPS>
		<wrapper.ntservice.name>${project.name}</wrapper.ntservice.name>
		<wrapper.ntservice.displayname>${project.name}</wrapper.ntservice.displayname>
		<wrapper.ntservice.description>${project.description}</wrapper.ntservice.description>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-parent</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- starter-web：spring-webmvc + autoconfigure + logback + yaml + tomcat -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- starter-test：junit + spring-test + mockito -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- freemarker-starter -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>

		<!-- mail-starter -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<!-- mybatis-starter：mybatis + mybatis-spring + tomcat-jdbc（default） -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>${mybatis-spring-boot-starter.version}</version>
		</dependency>
		<!-- mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-connector-java.version}</version>
		</dependency>

		<!-- quartz ：quartz-2.2.3/c3p0-0.9.1.1/slf4j-api-1.6.6 -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>${quartz.version}</version>
		</dependency>

		<!-- xxl-job-core -->
		<dependency>
			<groupId>com.xuxueli</groupId>
			<artifactId>xxl-job-core</artifactId>
			<version>${project.parent.version}</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<!--<plugin>-->
				<!--<groupId>org.springframework.boot</groupId>-->
				<!--<artifactId>spring-boot-maven-plugin</artifactId>-->
				<!--<version>${spring-boot.version}</version>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<goals>-->
							<!--<goal>repackage</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->

			<plugin>
				<!-- http://www.mojohaus.org/appassembler/appassembler-maven-plugin/usage-daemon-generatorconfig.html -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>2.0.0</version>
				<executions>
					<execution>
						<id>generate-jsw-scripts</id>
						<phase>package</phase>
						<goals>
							<goal>generate-daemons</goal>
						</goals>
						<configuration>
							<repositoryLayout>flat</repositoryLayout>
							<encoding>${project.build.sourceEncoding}</encoding>
							<!--<includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>-->
							<!-- copy the src/main/resources directory to /src -->
							<!--为系统配置文件指定一个目录-->
							<configurationDirectory>conf</configurationDirectory>
							<!--源代码中对应的系统配置文件的位置-->
							<configurationSourceDirectory>src/main/resources</configurationSourceDirectory>
							<copyConfigurationDirectory>true</copyConfigurationDirectory>
							<logsDirectory>logs</logsDirectory>
							<daemons>
								<daemon>
									<id>${daemon-name}</id>
									<mainClass>${daemon-mainClass}</mainClass>
									<jvmSettings>
										<initialMemorySize>${daemon-JAVA_Xmx}</initialMemorySize>
										<maxMemorySize>${daemon-JAVA_Xmx}</maxMemorySize>
										<extraArguments>
											<!-- Note : if the value is empty the plugin will throw NullPointerException-->
											<extraArgument>-Djava.wrapper=1 ${daemon-JAVA_OPS}</extraArgument>
											<extraArgument>-verbose:gc </extraArgument>
											<extraArgument>-XX:+PrintHeapAtGC </extraArgument>
											<extraArgument>-XX:+PrintGCDetails </extraArgument>
											<extraArgument>-XX:+PrintGCDateStamps </extraArgument>
											<extraArgument>-XX:+PrintGCTimeStamps </extraArgument>
											<extraArgument>-XX:+PrintTenuringDistribution </extraArgument>
											<extraArgument>-XX:+PrintGCApplicationStoppedTime </extraArgument>
											<extraArgument>-Xloggc:logs/gc.log </extraArgument>
											<extraArgument>-XX:+HeapDumpOnOutOfMemoryError </extraArgument>
											<extraArgument>-XX:HeapDumpPath=logs/gc.hprof  </extraArgument>
											<extraArgument>-XX:ErrorFile=logs/java_error_%p.log</extraArgument>
											<!--<extraArgument>-Xbootclasspath/p:lib/alpn-boot-${alpn.boot.version}.jar</extraArgument>-->
										</extraArguments>
									</jvmSettings>
									<platforms>
										<platform>jsw</platform>
									</platforms>
									<generatorConfigurations>
										<generatorConfiguration>
											<generator>jsw</generator>
											<includes>
												<include>linux-x86-32</include>
												<include>linux-x86-64</include>
												<include>macosx-universal-64</include>
												<include>macosx-universal-32</include>
												<include>windows-x86-32</include>
												<include>windows-x86-64</include>
											</includes>
											<configuration>
												<property>
													<name>configuration.directory.in.classpath.first</name>
													<value>conf</value>
												</property>
												<property>
													<name>set.default.REPO_DIR</name>
													<value>lib</value>
												</property>
												<property>
													<name>wrapper.java.command</name>
													<value>%JAVA_HOME%/bin/java</value>
												</property>
												<property>
													<name>wrapper.logfile</name>
													<value>logs/wrapper.log</value>
												</property>
												<property>
													<name>wrapper.startup.timeout</name>
													<value>7200</value><!-- 2小时 -->
												</property>
												<property>
													<name>wrapper.ping.timeout</name>
													<value>3600</value><!-- 1小时 -->
												</property>
												<property>
													<name>wrapper.ntservice.name</name>
													<value>${wrapper.ntservice.name}</value>
												</property>
												<property>
													<name>wrapper.ntservice.displayname</name>
													<value>${wrapper.ntservice.displayname}</value>
												</property>
												<property>
													<name>wrapper.ntservice.description</name>
													<value>${wrapper.ntservice.description}</value>
												</property>
												<property>
													<name>wrapper.console.title</name>
													<value>${wrapper.ntservice.name}</value>
												</property>
												<property>
													<!-- 如果pid文件已经存在则不启动程序 -->
													<name>wrapper.pidfile.strict</name>
													<value>TRUE</value>
												</property>
											</configuration>
										</generatorConfiguration>
									</generatorConfigurations>
								</daemon>
							</daemons>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- docker -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.13</version>
				<configuration>
					<!-- made of '[a-z0-9-_.]' -->
					<imageName>${project.artifactId}:${project.version}</imageName>
					<dockerDirectory>${project.basedir}</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
